// Monochrome theme ============================================================
// The only problem with this current setup is that #! styles are inherited by
// child themes, so have to be overriden! Always aim to remove as much code as
// possible.
//
// Pandoc (Skylighting)
// --------------------
// See `package.json` for build scripts with `npx`. For documentation:
// - @link: https://pandoc.org/chunkedhtml-demo/13-syntax-highlighting.html
// - @link: https://stackoverflow.com/a/30884409
//
// Problems to solve?
// ------------------
// Inheriting base `--font-color` might be better to be explicit? A lot of
// `.sourceCode` class repetition. Why?
//
// - Removed some dead `@media screen` and `@media print` code ...
// - Was simply setting some `overflow` and `white-space` rules.
// - #! Currently the line `.numbers` is broken. Needs fixing.


// div.sourceCode {
//   // pass
// }

// pre.sourceCode {
//   // pass

//   .numberSource {
//     margin-left: 3em;
//     padding-left: 4px;
//     border-left: 1px solid var(--color-bbb);

//     code {
//       counter-reset: source-line 0;

//       > span {
//         position: relative;
//         left: -4em;
//         counter-increment: source-line;

//         > a:first-child::before {
//           content: counter(source-line);
//           position: relative;
//           left: -1em;
//           display: inline-block;
//           width: 4em;
//           padding: 0 4px;
//           color: var(--color-bbb);
//           text-align: right;
//           vertical-align: baseline;
//           border: none;

//           -webkit-touch-callout: none; -webkit-user-select: none;
//           -khtml-user-select: none; -moz-user-select: none;
//           -ms-user-select: none; user-select: none;
//         }
//       }
//     }
//   }
// }

// code.sourceCode {
//   // pass

//   & > span {
//     &:empty {
//       // #! was a set height
//     }

//     & > a:first-child::before {
//       text-decoration: underline;  // #! Dunno what this does
//     }
//   }
// }


.sourceCode {
  // Normal (unused)
  // code span {
  //   color: var(--color-code-dark-normal);
  // }

  // Alert
  .al { color: var(--color-code-light-alert); font-weight: 700; }
  // Annotation
  .an { color: var(--color-code-light-annotation); font-style: italic; }
  // Attribute
  .at { color: var(--color-code-light-attribute); }
  // BaseN
  .bn { color: var(--color-code-light-base-n); }
  // BuiltIn
  .bu { color: var(--color-code-light-built-in); }
  // Char
  .ch { color: var(--color-code-light-char); }
  // Comment
  .co { color: var(--color-code-light-comment); font-style: italic; }
  // CommentVar
  .cv { color: var(--color-code-light-comment-var); font-style: italic; }
  // Constant
  .cn { color: var(--color-code-light-constant); }
  // ControlFlow
  .cf { color: var(--color-code-light-control-flow); font-weight: 700; }
  // DataType
  .dt { color: var(--color-code-light-data-type); text-decoration: underline; }
  // DecVal
  .dv { color: var(--color-code-light-dec-val); }
  // Documentation
  .do { color: var(--color-code-light-documentation); font-style: italic; }
  // Error
  .er { color: var(--color-code-light-error); font-weight: 700; }
  // Extension
  .ex { color: var(--color-code-light-extension); }
  // Float
  .fl { color: var(--color-code-light-float); }
  // Function
  .fu { color: var(--color-code-light-function); }
  // Import
  .im { color: var(--color-code-light-import); }
  // Information
  .in { color: var(--color-code-light-information); font-style: italic; }
  // Keyword
  .kw { color: var(--color-code-light-keyword); font-weight: 700; }  // #!
  // Operator
  .op { color: var(--color-code-light-operator); }
  // Other
  .ot { color: var(--color-code-light-other); }
  // Preprocessor
  .pp { color: var(--color-code-light-lowlight); font-weight: 700; }
  // Region Marker
  .re { color: var(--color-code-light-region-marker); }
  // SpecialChar
  .sc { color: var(--color-code-light-special-char); }
  // SpecialString
  .ss { color: var(--color-code-light-special-string); }
  // String
  .st { color: var(--color-code-light-string); }
  // Variable
  .va { color: var(--color-code-light-variable); }
  // VerbatimString
  .vs { color: var(--color-code-light-verbatim-string); }
  // Warning
  .wa { color: var(--color-code-light-warning); font-style: italic; }
}
